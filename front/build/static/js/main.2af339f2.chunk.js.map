{"version":3,"sources":["components/pages/LandingPage/CardInSlide.js","components/pages/LandingPage/SearchInput.js","components/pages/LandingPage/LandingPage.js","components/pages/DetailPage/ResizeImage.js","components/pages/DetailPage/IngredientChip.js","components/pages/ResultPage/HorizontalCard.js","components/pages/ResultPage/ResultPage.js","components/pages/DetailPage/RecipeList.js","components/pages/DetailPage/Information.js","components/pages/DetailPage/DetailPage.js","components/configs/Header/youcooklogo.png","components/configs/Header/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","minHeight","display","justifyContent","flexDirection","margin","marginTop","alignContent","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","over","overflowY","content","GlobalCss","withStyles","WebkitLineClamp","WebkitBoxOrient","textOverflow","overflow","padding","RecipeReviewCard","props","classes","React","useState","expanded","setExpanded","orders","description","listItem","map","order","Typography","paragraph","ingredients","ingredientsArr","ingredientsList","ingredient","path","videoId","console","log","Card","className","CardActionArea","to","style","textDecoration","color","CardHeader","Avatar","title","subheader","channelTitle","CardMedia","image","thumbnails","CardContent","variant","component","CardActions","disableSpacing","IconButton","clsx","onClick","Collapse","in","timeout","unmountOnExit","axios","require","SearchInput","inputValue","setInputValue","onClickHandler","post","word","then","response","data","history","push","pathname","state","catch","error","border","borderRadius","InputBase","onChange","e","target","value","placeholder","onKeyPress","key","type","LandingPage","videoData","setVideoData","useEffect","get","ItemList","item","Grid","xs","marginBottom","dots","infinite","speed","slidesToShow","slidesToScroll","centerPadding","responsive","breakpoint","settings","centerMode","ResizeImage","backgroundImage","srcUrl","width","backgroundPosition","backgroundSize","IngredientChip","ingredientChips","ingredientData","index","Chip","size","label","alignItems","flex","textAlign","details","fontSize","MediaControlCard","cover","Divider","ResultPage","items","location","videoList","RecipeList","recipeList","recipeData","recipe","ListItemText","primary","paddingBottom","List","Information","VisibilityOutlined","marginRight","viewCount","orientation","flexItem","ThumbUpOutlined","likeCount","DetailPage","match","params","video","subscriberCount","Header","AppBar","position","boxShadow","Toolbar","src","youcooklogo","App","fallback","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2af339f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport { CardActionArea, styled } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    minHeight: 500,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'column',\r\n    margin: '0.7em',\r\n    marginTop: 0,\r\n    alignContent: 'center'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  over: {\r\n    overflowY:'scroll',\r\n  },\r\n  content: {\r\n    height:400,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column',\r\n\r\n  }\r\n}));\r\n\r\nconst GlobalCss = withStyles({\r\n  // @global is handled by jss-plugin-global.\r\n  '@global': {\r\n    // You should target [class*=\"MuiButton-root\"] instead if you nest themes.\r\n    '.MuiCardHeader-title': {\r\n      display: '-webkit-box',\r\n      WebkitLineClamp: 2,\r\n      WebkitBoxOrient: 'vertical',\r\n      textOverflow: 'ellipsis',\r\n      overflow: 'hidden',\r\n    },\r\n    '.MuiCardHeader-root': {\r\n      minHeight: 55,\r\n      padding: '1em 1em'\r\n    }\r\n  },\r\n})(() => null);\r\n\r\n\r\nexport default function RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  \r\n  const orders = props.description\r\n  const listItem = orders && orders.map((order) =>\r\n    (<Typography paragraph>{order}</Typography>)\r\n  );\r\n  const ingredients = props.ingredientsArr\r\n  const ingredientsList = ingredients && ingredients.map((ingredient) =>\r\n    (<span>{ingredient}, </span>)\r\n  );\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const path = \"/detail/\"+props.videoId;\r\n  console.log(path);\r\n\r\n  return (\r\n    <>\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n      <Link to={\"/detail/\"+props.videoId} \r\n            style={{textDecoration:'none',\r\n                    color:'inherit'}}>\r\n        <div className={classes.content}>\r\n        <GlobalCss/>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            </Avatar>\r\n          }\r\n          title= {props.title}\r\n          subheader = {props.channelTitle}\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.thumbnails}\r\n          title=\"thumbnails\"\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              음식재료<br/>\r\n              {ingredientsList}\r\n          </Typography>\r\n        </CardContent>\r\n        </div>\r\n      </Link>\r\n      </CardActionArea>\r\n\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n        <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>레시피:</Typography>\r\n          {listItem}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst axios = require('axios');\r\n\r\nfunction SearchInput(props) {\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const onChangeHandler = (event) => {\r\n        setInputValue(event.target.value)\r\n    }\r\n\r\n    const onClickHandler = (props) => {\r\n        axios.post('http://54.180.16.31:5000/api/search/keyword', {\r\n                word : inputValue\r\n            }).then((response) => {\r\n                console.log(response.data);\r\n                props.props.history.push({\r\n                    pathname: '/result',\r\n                    state: {data: response.data}\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    \r\n    const onKeyPress = e => {\r\n        if (e.key === 'Enter'){\r\n            onClickHandler(props);\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ border: '1px solid black', borderRadius: '1rem' }}>\r\n            <InputBase \r\n                onChange={(e) => onChangeHandler(e)}\r\n                placeholder=\"레시피를 입력하세요.\"\r\n                style={{ marginLeft: '1rem' }}\r\n                onKeyPress = {onKeyPress}/>\r\n            <IconButton type=\"submit\" onClick={() =>onClickHandler(props)}>\r\n                <SearchIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchInput\r\n","import './LandingPage.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Card from './CardInSlide'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchInput from './SearchInput'\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from 'react-slick';\r\nimport { Height } from '@material-ui/icons';\r\n\r\nconst axios = require('axios');\r\n\r\nfunction LandingPage(props) {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    centerPadding: \"0em\",\r\n    responsive: [ // 반응형 웹 구현 옵션\r\n      {\r\n        breakpoint: 1200, // 화면 사이즈 1200px\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 850,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          centerMode: true,\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        }\r\n      }\r\n    ]\r\n\r\n  };\r\n  const [videoData, setVideoData] = useState([])\r\n  useEffect(() => {\r\n    axios.get(`http://54.180.16.31:5000/api/search/sorted`)\r\n        .then((response) => {\r\n            setVideoData(response.data.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n  }, [])\r\n  const items = videoData\r\n  const ItemList = items && items .map((item) =>\r\n    (<Card className=\"card\" title={item.title ?? ''} channelTitle={item.channelTitle ?? ''} thumbnails={item.thumbnails ?? ''} description={item.description ?? ''} ingredientsArr={item.ingredientsArr ?? ''} videoId={item.videoId ?? ''}></Card>\r\n    )\r\n  );\r\n  \r\n  return (\r\n    <div> \r\n      <Grid item xs={12} \r\n            style={{  display: 'flex' ,\r\n                      justifyContent: 'center',\r\n                      marginTop:'4rem',\r\n                      marginBottom:'2rem',}}>\r\n        <SearchInput props={props}></SearchInput>\r\n      </Grid>\r\n      <Grid item xs={12}\r\n            style={{  display: 'flex' ,\r\n                      justifyContent: 'center'}}>\r\n       🔥Best🔥\r\n      </Grid>\r\n      <Grid className=\"slide\" item xs={12}>\r\n        <Slider {...settings}>\r\n          {ItemList}\r\n        </Slider>\r\n      </Grid>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from 'react'\r\n\r\n{/* <div style={{ maxHeight: '269px', overflow: 'hidden' }}>\r\n                    <div style={{ width: '100%'}}>\r\n                        <img src={props.srcUrl} \r\n                            style={{ \r\n                                    borderRadius: '15px',\r\n                                    maxHeight: 'initial',\r\n                                    marginTop: '-46px' }}></img>\r\n                    </div>\r\n        </div> */}\r\n\r\n\r\nfunction ResizeImage(props) {\r\n \r\n    return (\r\n        <div style={{   backgroundImage: `url(${props.srcUrl})`,\r\n                        width: '350px',\r\n                        height: '197.1px',\r\n                        backgroundPosition: '50% 50%',\r\n                        backgroundSize: 'cover' }}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResizeImage\r\n","import React from 'react'\r\nimport { Chip } from '@material-ui/core';\r\n\r\nfunction IngredientChip(props) {\r\n    const ingredientChips = props.ingredientData.map((ingredient, index) => (\r\n        <>\r\n            <Chip variant=\"outlined\" size=\"small\" label={ingredient} style={{margin: '0.15rem'}}/>\r\n        </>\r\n    ))\r\n    \r\n    return (\r\n        <div>\r\n            {ingredientChips}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientChip\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ResizeImage from '../DetailPage/ResizeImage';\r\nimport IngredientChip from '../DetailPage/IngredientChip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { CardActionArea } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center', \r\n        margin: '10px',\r\n        flex: 1\r\n    },\r\n    thumbnails:{\r\n        textAlign: 'center',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '350px',\r\n        textAlign: 'left',\r\n    },\r\n    title: {\r\n        fontSize: '18px',\r\n        marginTop: '5px',\r\n        marginBottom: '5px',\r\n    },\r\n    channelTitle: {\r\n        fontSize: '14px',\r\n        color: '#444444',\r\n    },\r\n    ingredient: {\r\n        fontSize: '12px',\r\n        color: '#777777',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\nexport default function MediaControlCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <CardActionArea>\r\n        <div className={classes.root}>\r\n            <div className={classes.thumbnails}>\r\n                <ResizeImage\r\n                className={classes.cover}\r\n                srcUrl={props.thumbnails}\r\n                title=\"thumbnails\"\r\n            />\r\n            </div>\r\n            <div className={classes.details}>\r\n                    <span className={classes.title}>\r\n                        {props.title}<br/>\r\n                    </span>\r\n                    <span className={classes.channelTitle}>\r\n                        {props.channelTitle}<br/>\r\n                    </span>\r\n                    <span className={classes.ingredient}>\r\n                        음식 재료<br/>\r\n                        <IngredientChip ingredientData={props.ingredientsArr ?? []}></IngredientChip>\r\n                    </span>\r\n                <Divider/>\r\n            </div>\r\n        </div>\r\n        </CardActionArea>\r\n    );\r\n}","import React from 'react'\r\nimport Card from './HorizontalCard'\r\n\r\nfunction ResultPage(props) {\r\n    //console.log(props.location.state.data);\r\n    const items = props.location.state.data.videoList;\r\n    //console.log(items);\r\n\r\n    const onClickHandler = (item) => {\r\n        console.log(item)\r\n        props.history.push({\r\n            pathname: `/detail/${item.videoId}`,\r\n        });\r\n    }\r\n\r\n    const ItemList = items && items.map((item, index) => (\r\n        <div className=\"card\" onClick={() =>onClickHandler(item)}>\r\n            <Card \r\n                title={item.title} \r\n                channelTitle={item.channelTitle} \r\n                thumbnails={item.thumbnails} \r\n                description={item.description} \r\n                ingredientsArr={item.ingredientsArr}>\r\n            </Card>\r\n        </div>\r\n    ));\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"col\">\r\n                {ItemList}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ResultPage\r\n","import React from 'react'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\nfunction RecipeList(props) {\r\n    const recipeList = props.recipeData.map((recipe, index) => (\r\n        <>\r\n            <ListItemText primary={recipe} style={{paddingBottom: '0.3rem', paddingTop: '0.3rem'}}/>\r\n            <Divider />\r\n        </>\r\n    ))\r\n\r\n    return (\r\n            <List component=\"nav\" aria-label=\"mailbox folders\" style={{margin: '0rem 1rem 0rem 1rem'}}>\r\n                {recipeList}\r\n            </List>\r\n        \r\n            \r\n    );\r\n}\r\n\r\nexport default RecipeList\r\n","import React from 'react'\r\nimport { Divider, Grid } from '@material-ui/core';\r\nimport { VisibilityOutlined, SubscriptionsOutlined, ThumbUpOutlined, TitleOutlined, AccountCircleOutlined } from '@material-ui/icons';\r\n\r\nfunction Information(props) {\r\n    \r\n    return (\r\n        <div>\r\n        \r\n                <div style={{textAlign:'center' ,margin: '0.1rem', fontSize: '1rem'}}>{props.title}</div>\r\n                <div style={{textAlign:'center' ,margin: '0.1rem 0 0.5rem 0', fontSize: '0.8rem'}}>{props.channelTitle}</div>\r\n                {/* <Divider orientation=\"vertical\" flexItem style={{margin: '0 0.7rem 0 0.7rem'}}/>\r\n                <SubscriptionsOutlined style={{marginRight: '0.3rem'}}/>\r\n                <div style={{marginTop: '0.2rem', fontSize: '0.8rem'}}>{props.subscriberCount}</div> */}\r\n            <div style={{display: 'flex',\r\n                        justifyContent:'center'}}>\r\n                <VisibilityOutlined style={{marginRight: '0.3rem'}}/>\r\n                <div style={{marginTop: '0.2rem', fontSize: '0.8rem'}}>{props.viewCount}</div>\r\n  \r\n                <Divider orientation=\"vertical\" flexItem style={{margin: '0 0.7rem 0 0.7rem'}}/>\r\n                <ThumbUpOutlined style={{marginRight: '0.3rem'}}/>\r\n                <div style={{marginTop: '0.2rem', fontSize: '0.8rem'}}>{props.likeCount}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Information\r\n","import React, { useState, useEffect } from 'react';\r\nimport ResizeImage from './ResizeImage';\r\nimport RecipeList from './RecipeList';\r\nimport IngredientChip from './IngredientChip';\r\nimport Information from './Information';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst axios = require('axios');\r\n\r\nfunction DetailPage({match}) {\r\n\r\n    const [videoData, setVideoData] = useState({})\r\n    \r\n    const videoId = match.params.videoId\r\n    useEffect(() => {\r\n        axios.get(`http://54.180.16.31:5000/api/search/detail/${videoId}`)\r\n            .then((response) => {\r\n                console.log(response.data.video);\r\n                setVideoData(response.data.video);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, [])\r\n\r\n    return (\r\n            <Grid  \r\n                item xs={12} \r\n                style={{  \r\n                    display: 'flex' ,\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center'}}>\r\n                <ResizeImage \r\n                    srcUrl={videoData.thumbnails ?? ''}\r\n                    style={{textAlign:'center'}} /> \r\n                <Information \r\n                    style={{textAlign:'center'}}\r\n                    title={videoData.title ?? ''}\r\n                    channelTitle={videoData.channelTitle ?? ''}\r\n                    viewCount={videoData.viewCount ?? 0}\r\n                    subscriberCount={videoData.subscriberCount ?? 0}\r\n                    likeCount={videoData.likeCount ?? 0}/>\r\n                <span style={{textAlign:'center', margin:'1rem 0 0.5rem 0'}}>재료</span>\r\n                <IngredientChip  style={{textAlign:'center'}} ingredientData={videoData.ingredientsArr ?? []}/>\r\n                <span style={{textAlign:'center', margin:'1rem 0 0 0'}}>레시피</span>\r\n                <RecipeList style={{textAlign:'center'}} recipeData={videoData.description ?? []}/>\r\n            </Grid>        \r\n    )\r\n}\r\n\r\nexport default DetailPage\r\n","export default __webpack_public_path__ + \"static/media/youcooklogo.a657ece7.png\";","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport youcooklogo from './youcooklogo.png'\r\nimport { Divider } from '@material-ui/core';\r\n\r\nfunction Header() {\r\n    \r\n    return (\r\n        <AppBar position=\"static\" style={{backgroundColor:'white',\r\n                                          boxShadow: 'none'}}>\r\n            <Toolbar style={{display:'flex', justifyContent:'center'}}>\r\n                    <Link style={{textDecoration:'none',\r\n                                  color:'inherit',\r\n                                  justifyContent: 'center',\r\n                                  display: 'flex'}} to=\"/\">\r\n                        <img src={youcooklogo} \r\n                             style={{width:\"25%\",\r\n                                     height:\"15%\"}}></img>\r\n                    </Link>\r\n            </Toolbar>\r\n            <Divider/>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport LandingPage from './pages/LandingPage/LandingPage';\r\nimport ResultPage from './pages/ResultPage/ResultPage';\r\nimport DetailPage from './pages/DetailPage/DetailPage';\r\nimport Header from './configs/Header/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n        <Header></Header>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route exact path=\"/result\" component={ResultPage} />\r\n          <Route exact path=\"/detail/:videoId\" component={DetailPage} />\r\n        </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
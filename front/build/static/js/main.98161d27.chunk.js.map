{"version":3,"sources":["components/pages/LandingPage/CardInSlide.js","components/pages/LandingPage/SearchInput.js","components/pages/LandingPage/LandingPage.js","components/pages/DetailPage/ResizeImage.js","components/pages/DetailPage/IngredientChip.js","components/pages/ResultPage/HorizontalCard.js","components/pages/ResultPage/ResultPage.js","components/pages/DetailPage/RecipeList.js","components/pages/DetailPage/Information.js","components/pages/DetailPage/DetailPage.js","components/configs/Header/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","margin","alignContent","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","over","overflowY","RecipeReviewCard","props","classes","React","useState","expanded","setExpanded","orders","description","listItem","map","order","Typography","paragraph","ingredients","ingredientsArr","ingredientsList","ingredient","Card","className","CardActionArea","CardHeader","Avatar","title","subheader","channelTitle","CardMedia","image","thumbnails","CardContent","variant","color","component","CardActions","disableSpacing","IconButton","clsx","onClick","Collapse","in","timeout","unmountOnExit","axios","require","SearchInput","inputValue","setInputValue","onClickHandler","post","word","then","response","console","log","data","history","push","pathname","state","catch","error","style","border","borderRadius","InputBase","onChange","e","target","value","placeholder","onKeyPress","key","type","LandingPage","videoData","setVideoData","useEffect","get","ItemList","item","Grid","xs","display","justifyContent","marginTop","dots","infinite","speed","slidesToShow","slidesToScroll","centerMode","centerPadding","align","responsive","breakpoint","settings","ResizeImage","backgroundImage","srcUrl","width","backgroundPosition","backgroundSize","IngredientChip","ingredientChips","ingredientData","index","Chip","size","label","flexDirection","alignItems","flex","textAlign","details","content","MediaControlCard","cover","Divider","ResultPage","items","location","videoList","videoId","RecipeList","recipeList","recipeData","recipe","ListItemText","primary","paddingBottom","List","Information","fontSize","VisibilityOutlined","marginRight","viewCount","orientation","flexItem","ThumbUpOutlined","likeCount","DetailPage","match","params","video","subscriberCount","Header","AppBar","position","Toolbar","textDecoration","to","App","fallback","exact","path","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98161d27.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport { CardActionArea } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    margin: '1em',\r\n    alignContent: 'center'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  over: {\r\n    overflowY:'scroll',\r\n  }\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  \r\n  const orders = props.description\r\n  const listItem = orders && orders.map((order) =>\r\n    (<Typography paragraph>{order}</Typography>)\r\n  );\r\n  const ingredients = props.ingredientsArr\r\n  const ingredientsList = ingredients && ingredients.map((ingredient) =>\r\n    (<span>{ingredient}, </span>)\r\n  );\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            \r\n          </Avatar>\r\n        }\r\n\r\n        title= {props.title}\r\n        subheader = {props.channelTitle}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={props.thumbnails}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            음식재료<br/>\r\n            {ingredientsList}\r\n        </Typography>\r\n      </CardContent>\r\n      </CardActionArea>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n        <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>레시피:</Typography>\r\n          {listItem}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst axios = require('axios');\r\n\r\nfunction SearchInput(props) {\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const onChangeHandler = (event) => {\r\n        setInputValue(event.target.value)\r\n    }\r\n\r\n    const onClickHandler = (props) => {\r\n        axios.post('http://54.180.16.31:5000/api/search/keyword', {\r\n                word : inputValue\r\n            }).then((response) => {\r\n                console.log(response.data);\r\n                props.props.history.push({\r\n                    pathname: '/result',\r\n                    state: {data: response.data}\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    \r\n    const onKeyPress = e => {\r\n        if (e.key === 'Enter'){\r\n            onClickHandler(props);\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ border: '1px solid black', borderRadius: '1rem' }}>\r\n            <InputBase \r\n                onChange={(e) => onChangeHandler(e)}\r\n                placeholder=\"레시피를 입력하세요.\"\r\n                style={{ marginLeft: '1rem' }}\r\n                onKeyPress = {onKeyPress}/>\r\n            <IconButton type=\"submit\" onClick={() =>onClickHandler(props)}>\r\n                <SearchIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchInput\r\n","import './LandingPage.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Card from './CardInSlide'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchInput from './SearchInput'\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from 'react-slick';\r\n\r\nconst axios = require('axios');\r\n\r\nfunction LandingPage(props) {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    centerMode: true,\r\n    centerPadding: \"0em\",\r\n    align: 'center',\r\n    responsive: [ // 반응형 웹 구현 옵션\r\n      {\r\n        breakpoint: 1200, // 화면 사이즈 1200px\r\n        settings: {\r\n          slidesToShow: 3,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 850,\r\n        settings: {\r\n          slidesToShow: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 1\r\n        }\r\n      }\r\n    ]\r\n\r\n  };\r\n  const [videoData, setVideoData] = useState([])\r\n  useEffect(() => {\r\n    axios.get(`http://54.180.16.31:5000/api/search/sorted`)\r\n        .then((response) => {\r\n            setVideoData(response.data.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n  }, [])\r\n  const items = videoData\r\n  const ItemList = items && items .map((item) =>\r\n    (<Card className=\"card\" title={item.title ?? ''} channelTitle={item.channelTitle ?? ''} thumbnails={item.thumbnails ?? ''} description={item.description ?? ''} ingredientsArr={item.ingredientsArr ?? ''}></Card>\r\n    )\r\n  );\r\n  \r\n  return (\r\n    <div> \r\n      <Grid item xs={12} \r\n            style={{  display: 'flex' ,\r\n                      justifyContent: 'center',\r\n                      marginTop:'10rem'}}>\r\n        <SearchInput props={props}></SearchInput>\r\n      </Grid>\r\n      <Grid className=\"slide\" item xs={12}>\r\n        <Slider {...settings}>\r\n          {ItemList}\r\n        </Slider>\r\n      </Grid>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from 'react'\r\n\r\n{/* <div style={{ maxHeight: '269px', overflow: 'hidden' }}>\r\n                    <div style={{ width: '100%'}}>\r\n                        <img src={props.srcUrl} \r\n                            style={{ \r\n                                    borderRadius: '15px',\r\n                                    maxHeight: 'initial',\r\n                                    marginTop: '-46px' }}></img>\r\n                    </div>\r\n        </div> */}\r\n\r\n\r\nfunction ResizeImage(props) {\r\n \r\n    return (\r\n        <div style={{   backgroundImage: `url(${props.srcUrl})`,\r\n                        width: '400px',\r\n                        height: '225.3px',\r\n                        backgroundPosition: '50% 50%',\r\n                        backgroundSize: 'cover' }}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResizeImage\r\n","import React from 'react'\r\nimport { Chip } from '@material-ui/core';\r\n\r\nfunction IngredientChip(props) {\r\n    const ingredientChips = props.ingredientData.map((ingredient, index) => (\r\n        <>\r\n            <Chip variant=\"outlined\" size=\"small\" label={ingredient} style={{margin: '0.15rem'}}/>\r\n        </>\r\n    ))\r\n    \r\n    return (\r\n        <div>\r\n            {ingredientChips}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientChip\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ResizeImage from '../DetailPage/ResizeImage';\r\nimport IngredientChip from '../DetailPage/IngredientChip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { CardActionArea } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center', \r\n        margin: '20px',\r\n        flex: 1\r\n    },\r\n    thumbnails:{\r\n        textAlign: 'center',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '440px',\r\n    },\r\n    content: {\r\n        textAlign: 'left',\r\n    },\r\n\r\n}));\r\n\r\nexport default function MediaControlCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <CardActionArea>\r\n        <div className={classes.root}>\r\n            <div className={classes.thumbnails}>\r\n                <ResizeImage\r\n                className={classes.cover}\r\n                srcUrl={props.thumbnails}\r\n                title=\"thumbnails\"\r\n            />\r\n            </div>\r\n            <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        {props.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                        {props.channelTitle}\r\n                    </Typography>\r\n                    <Typography variant=\"h8\">\r\n                        음식 재료<br />\r\n                        <IngredientChip ingredientData={props.ingredientsArr ?? []}></IngredientChip>\r\n                    </Typography>\r\n                </CardContent>\r\n                <Divider/>\r\n            </div>\r\n        </div>\r\n        </CardActionArea>\r\n    );\r\n}","import React from 'react'\r\nimport Card from './HorizontalCard'\r\n\r\nfunction ResultPage(props) {\r\n    //console.log(props.location.state.data);\r\n    const items = props.location.state.data.videoList;\r\n    //console.log(items);\r\n\r\n    const onClickHandler = (item) => {\r\n        console.log(item)\r\n        props.history.push({\r\n            pathname: `/detail/${item.videoId}`,\r\n        });\r\n    }\r\n\r\n    const ItemList = items && items.map((item, index) => (\r\n        <div className=\"card\" onClick={() =>onClickHandler(item)}>\r\n            <Card \r\n                title={item.title} \r\n                channelTitle={item.channelTitle} \r\n                thumbnails={item.thumbnails} \r\n                description={item.description} \r\n                ingredientsArr={item.ingredientsArr}>\r\n            </Card>\r\n        </div>\r\n    ));\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"col\">\r\n                {ItemList}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ResultPage\r\n","import React from 'react'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\nfunction RecipeList(props) {\r\n    const recipeList = props.recipeData.map((recipe, index) => (\r\n        <>\r\n            <ListItemText primary={recipe} style={{paddingBottom: '0.3rem', paddingTop: '0.3rem'}}/>\r\n            <Divider />\r\n        </>\r\n    ))\r\n\r\n    return (\r\n            <List component=\"nav\" aria-label=\"mailbox folders\" style={{margin: '0rem 1rem 0rem 1rem'}}>\r\n                {recipeList}\r\n            </List>\r\n        \r\n            \r\n    );\r\n}\r\n\r\nexport default RecipeList\r\n","import React from 'react'\r\nimport { Divider, Grid } from '@material-ui/core';\r\nimport { VisibilityOutlined, SubscriptionsOutlined, ThumbUpOutlined, TitleOutlined, AccountCircleOutlined } from '@material-ui/icons';\r\n\r\nfunction Information(props) {\r\n    \r\n    return (\r\n        <div>\r\n        \r\n                <div style={{textAlign:'center' ,margin: '0.1rem', fontSize: '1rem'}}>{props.title}</div>\r\n                <div style={{textAlign:'center' ,margin: '0.1rem 0 0.5rem 0', fontSize: '0.8rem'}}>{props.channelTitle}</div>\r\n                {/* <Divider orientation=\"vertical\" flexItem style={{margin: '0 0.7rem 0 0.7rem'}}/>\r\n                <SubscriptionsOutlined style={{marginRight: '0.3rem'}}/>\r\n                <div style={{marginTop: '0.2rem', fontSize: '0.8rem'}}>{props.subscriberCount}</div> */}\r\n            <div style={{display: 'flex',\r\n                        justifyContent:'center'}}>\r\n                <VisibilityOutlined style={{marginRight: '0.3rem'}}/>\r\n                <div style={{marginTop: '0.2rem', fontSize: '0.8rem'}}>{props.viewCount}</div>\r\n  \r\n                <Divider orientation=\"vertical\" flexItem style={{margin: '0 0.7rem 0 0.7rem'}}/>\r\n                <ThumbUpOutlined style={{marginRight: '0.3rem'}}/>\r\n                <div style={{marginTop: '0.2rem', fontSize: '0.8rem'}}>{props.likeCount}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Information\r\n","import React, { useState, useEffect } from 'react';\r\nimport ResizeImage from './ResizeImage';\r\nimport RecipeList from './RecipeList';\r\nimport IngredientChip from './IngredientChip';\r\nimport Information from './Information';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst axios = require('axios');\r\n\r\nfunction DetailPage({match}) {\r\n\r\n    const [videoData, setVideoData] = useState({})\r\n    \r\n    const videoId = match.params.videoId\r\n    useEffect(() => {\r\n        axios.get(`http://54.180.16.31:5000/api/search/detail/${videoId}`)\r\n            .then((response) => {\r\n                console.log(response.data.video);\r\n                setVideoData(response.data.video);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, [])\r\n\r\n    return (\r\n            <Grid  \r\n                item xs={12} \r\n                style={{  \r\n                    display: 'flex' ,\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center'}}>\r\n                <ResizeImage \r\n                    srcUrl={videoData.thumbnails ?? ''}\r\n                    style={{textAlign:'center'}} /> \r\n                <Information \r\n                    style={{textAlign:'center'}}\r\n                    title={videoData.title ?? ''}\r\n                    channelTitle={videoData.channelTitle ?? ''}\r\n                    viewCount={videoData.viewCount ?? 0}\r\n                    subscriberCount={videoData.subscriberCount ?? 0}\r\n                    likeCount={videoData.likeCount ?? 0} />\r\n                <span style={{textAlign:'center', margin:'1rem 0 0.5rem 0'}}>재료</span>\r\n                <IngredientChip  style={{textAlign:'center'}} ingredientData={videoData.ingredientsArr ?? []}/>\r\n                <span style={{textAlign:'center', margin:'1rem 0 0 0'}}>레시피</span>\r\n                <RecipeList style={{textAlign:'center'}} recipeData={videoData.description ?? []}/>\r\n            </Grid>        \r\n    )\r\n}\r\n\r\nexport default DetailPage\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    \r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar style={{display:'flex', justifyContent:'center'}}>\r\n                <Typography variant=\"h6\"\r\n                    style={{textAlign:'center'}}>\r\n                    <Link style={{textDecoration:'none',\r\n                                  color:'inherit'}} to=\"/\">🤔YouCook</Link>\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport LandingPage from './pages/LandingPage/LandingPage';\r\nimport ResultPage from './pages/ResultPage/ResultPage';\r\nimport DetailPage from './pages/DetailPage/DetailPage';\r\nimport Header from './configs/Header/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n        <Header></Header>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route exact path=\"/result\" component={ResultPage} />\r\n          <Route exact path=\"/detail/:videoId\" component={DetailPage} />\r\n        </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}